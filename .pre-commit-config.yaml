repos:
  # Quick content checks based on grepping for python specific patterns:
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.9.0
    hooks:
      - id: python-check-blanket-noqa # Prohibit overly broad QA exclusions.
      - id: python-no-eval # Never use eval() it's dangerous.
      - id: python-no-log-warn # logger.warning(), not old .warn()
      - id: rst-backticks # Find single rather than double backticks
      - id: rst-directive-colons # Missing double-colons after directives
      - id: rst-inline-touching-normal # Inline code should never touch normal text
      - id: python-use-type-annotations # Use annotations not old-style type comments

  # Other file formatting, plus common Git mistakes & text file standardization:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-added-large-files # Don't accidentally commit giant files.
      - id: check-merge-conflict # Watch for lingering merge markers.
      - id: check-yaml # Validate all YAML files.
      - id: check-case-conflict # Avoid case sensitivity in file names.
      - id: debug-statements # Watch for lingering debugger calls.
      - id: end-of-file-fixer # Ensure there's a newline at EOF.
      - id: mixed-line-ending # Only newlines, no line-feeds.
      - id: trailing-whitespace # Remove trailing whitespace.
      - id: name-tests-test # Follow PyTest naming convention.

  ########################################################################################
  # Formatters: hooks that re-write Python and RST files
  ########################################################################################

  # Convert relative imports to absolute imports
  - repo: https://github.com/MarcoGorelli/absolufy-imports
    rev: v0.3.1
    hooks:
      - id: absolufy-imports

  # Make sure import statements are sorted uniformly.
  - repo: https://github.com/PyCQA/isort
    rev: 5.10.1
    hooks:
      - id: isort

  # Remove f-string prefix when there's nothing in the string to format.
  - repo: https://github.com/dannysepler/rm_unneeded_f_str
    rev: v0.1.0
    hooks:
      - id: rm-unneeded-f-str

  # Use built-in types for annotations as per PEP585, with __futures__ for Python 3.8/3.9
  # Note that this sometimes conflicts with Pydantic on Python 3.8/3.9
  - repo: https://github.com/sondrelg/pep585-upgrade
    rev: "v1.0"
    hooks:
      - id: upgrade-type-hints
        args: ["--futures=true"]

  # Update a bunch of Python syntax, using __futures__ for Python 3.8/3.9
  # Note that this sometimes conflicts with Pydantic on Python 3.8/3.9
  - repo: https://github.com/asottile/pyupgrade
    rev: v2.38.2
    hooks:
      - id: pyupgrade
        args: ["--py38-plus"]

  # Deterministic python formatting:
  - repo: https://github.com/psf/black
    rev: 22.8.0
    hooks:
      - id: black
        language_version: python3.10

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0-alpha.0
    hooks:
      - id: prettier
        types_or: [yaml]

  ########################################################################################
  # Linters: hooks that check but don't alter Python & RST files
  ########################################################################################

  # Check for PEP8 non-compliance, code complexity, style, errors, etc:
  - repo: https://github.com/PyCQA/flake8
    rev: 5.0.4
    hooks:
      - id: flake8
        args: ["--config", "tox.ini"]
        additional_dependencies:
          - flake8-docstrings
          - flake8-colors
          - pydocstyle
          - flake8-builtins
          - mccabe
          - pep8-naming
          - pycodestyle
          - pyflakes
          - flake8-rst-docstrings
          - flake8-use-fstring

  # Check for known security vulnerabilities:
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.4
    hooks:
      - id: bandit
        args: ["--configfile", ".bandit.yml"]

  # Check for errors in restructuredtext (.rst) files under the doc hierarchy
  - repo: https://github.com/PyCQA/doc8
    rev: v1.0.0
    hooks:
      - id: doc8
        args: ["--config", "tox.ini"]

  # Lint any RST files and embedded code blocks for syntax / formatting errors
  - repo: https://github.com/rstcheck/rstcheck
    rev: v6.1.0
    hooks:
      - id: rstcheck
        additional_dependencies: [sphinx]
        args: ["--config", "tox.ini"]

  # Lint Dockerfiles for errors and to ensure best practices
  - repo: https://github.com/AleksaC/hadolint-py
    rev: v2.10.0
    hooks:
      - id: hadolint

  ########################################################################################
  # Custom local hooks
  ########################################################################################
  - repo: local
    hooks:
      # clear outputs from Jupyter notebooks
      - id: nb-output-clear
        name: nb-output-clear
        stages: [commit]
        language: system
        verbose: false
        pass_filenames: false
        always_run: true
        entry: find notebooks \( -name \*.ipynb -not -name \*checkpoint.ipynb \) -type f -exec jupyter nbconvert --clear-output {} \;
      # Run the unit tests
      - id: unit-tests
        name: unit-tests
        stages: [commit]
        language: system
        verbose: false
        pass_filenames: false
        always_run: true
        entry: pytest --doctest-modules src/ferc_xbrl_extractor tests/unit

# Configuration for pre-commit.ci
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks
    For more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: main
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: [unit-tests, nb-output-clear]
  submodules: false
